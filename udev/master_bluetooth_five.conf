# *.conf
#start on started zed_people_detection
#stop on stopping zed_people_detection

start on starting ego
stop on stopping ego

respawn

# define username
env USER_NAME=iim

# vgg needs anaconda path addition
env ADD_ANACONDA=1

# define this in parameter to disable group stop
env DISABLE_GROUP_STOP=

#env CPULIMIT_PID

pre-start script
    sleep 1
    DATE=`date`
    echo "[$DATE] Starting job $UPSTART_JOB"

# mtu setting for vgg
#    ifconfig eth0 mtu 8500

end script

post-stop script
    DATE=`date`
    echo "[$DATE] Stopping job $UPSTART_JOB"

# Kill the perception top service to force respawning in all perception group
    if [ -z $DISABLE_GROUP_STOP ]
    then
        set +e
        MYPID=`pidof -x perception.sh`
        set -e

        if [ ! -z $MYPID ]
        then
            echo "Killing group pid $MYPID"
            kill -15 $MYPID
        fi
    else
        echo "Group stop is disabled"
    fi

#    sleep 1
end script

script
    ulimit -c 4096000
    echo "/var/log/health_monitor/crash_report/%e.SIG%s.core" > /proc/sys/kernel/core_pattern

## 1. Run binary directly
#   exec /home/peter-liem/Work/catkin_ws/devel/lib/motor_controller_test/motor_controller_test_node
## 2. Run via rosrun
#   rosrun motor_controller_test motor_controller_test_node
## 3. Run via roslaunch
#   roslaunch motor_controller_test base_motor.launch
#  4. Run via bash script as non-user
    exec su -c "/usr/local/share/health_monitor/ros_wrapper.sh rosrun hf_master_blue hf_master_blue" $USER_NAME
end script
